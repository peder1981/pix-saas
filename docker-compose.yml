version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pixsaas-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pixsaas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pixsaas-network

  api:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.api
    container_name: pixsaas-api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: pixsaas
      DB_SSLMODE: disable
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      PORT: 8080
      ENVIRONMENT: development
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pixsaas-network
    restart: unless-stopped

  # Prometheus para métricas (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: pixsaas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - pixsaas-network
    profiles:
      - monitoring

  # Grafana para visualização (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: pixsaas-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - pixsaas-network
    profiles:
      - monitoring

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  pixsaas-network:
    driver: bridge
